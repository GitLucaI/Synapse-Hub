local RunService = game:GetService("RunService")
local InputService = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local char = player.Character
local camera = game.Workspace.CurrentCamera
local humanoid = char:FindFirstChildWhichIsA("Humanoid")
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local RS = game:GetService("RunService")
local Window = Rayfield:CreateWindow({
	Name = "Main",
	LoadingTitle = "Loading interface",
	LoadingSubtitle = "by Synapse",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, 
		FileName = "Synapse Hub"
	},
	Discord = {
		Enabled = true,
		Invite = "vMbNSSa9TN",
		RememberJoins = true 
	},
	KeySystem = false, 
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided",
		FileName = "Key", 
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local MainTab = Window:CreateTab("Main", 4483362458)

local Section = MainTab:CreateSection("ESP")

local Button = MainTab:CreateButton({
	Name = "Bones ESP",
	Callback = function()
		for _, c in pairs(workspace:WaitForChild("Map"):GetChildren()) do
			if c.Name == "Bone" then
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(0.384314, 0.384314, 0.384314)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Bone"
					tl.Parent = bg
				end
			end
		end
		workspace:WaitForChild("Map").ChildAdded:Connect(function(c)
			if c.Name == "Bone" then
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(0.384314, 0.384314, 0.384314)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Bone"
					tl.Parent = bg
				end
			end
		end)
	end,
})

local Button = MainTab:CreateButton({
	Name = "Fingerprints ESP",
	Callback = function()
		for _, c in pairs(workspace:WaitForChild("Dynamic"):WaitForChild("Evidence").Fingerprints:GetChildren()) do
			if c.Name == "Fingerprint" then
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(1, 1, 1)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Fingerprint"
					tl.Parent = bg
				end
			end
		end
		workspace:WaitForChild("Dynamic"):WaitForChild("Evidence").Fingerprints.ChildAdded:Connect(function(c)
			if c.Name == "Fingerprint" then
				Rayfield:Notify({
					Title = "Spawner",
					Content = "Fingerprint has spawned!",
					Duration = 2,
					Image = 4483362458,
					Actions = { -- Notification Buttons
						Ignore = {
							Name = "Okay!",
							Callback = function()

							end
						},
					},
				})
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(1, 1, 1)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Fingerprint"
					tl.Parent = bg
				end
			end
		end)
	end,
})

local Button = MainTab:CreateButton({
	Name = "Orbs ESP",
	Callback = function()
		for _, c in pairs(workspace:WaitForChild("Dynamic"):WaitForChild("Evidence").Orbs:GetChildren()) do
			if c.Name == "Orb" then
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(0.333333, 0.666667, 1)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Orb"
					tl.Parent = bg
				end
			end
		end
		workspace:WaitForChild("Dynamic"):WaitForChild("Evidence").Orbs.ChildAdded:Connect(function(c)
			if c.Name == "Orb" then
				Rayfield:Notify({
					Title = "Spawner",
					Content = "Orb has spawned!",
					Duration = 2,
					Image = 4483362458,
					Actions = { -- Notification Buttons
						Ignore = {
							Name = "Okay!",
							Callback = function()
								
							end
						},
					},
				})
				if not c:FindFirstChild("ESP") then
					local ESP = Instance.new("Highlight")
					ESP.FillColor = Color3.new(0.333333, 0.666667, 1)
					ESP.Name = "ESP"
					task.wait()
					ESP.Parent = c
					local bg = Instance.new("BillboardGui")
					bg.AlwaysOnTop = true
					bg.Adornee = c
					bg.Size = UDim2.new(4, 0, 1, 0) 
					bg.Parent = c

					local tl = Instance.new("TextLabel")
					tl.TextScaled = true
					tl.Size = UDim2.new(1, 0, 1, 0) 
					tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
					tl.TextStrokeTransparency = 0
					tl.BackgroundTransparency = 1 
					tl.Text = "Orb"
					tl.Parent = bg
				end
			end
		end)
	end,
})

local Button = MainTab:CreateButton({
	Name = "NPCs ESP",
	Callback = function()
		for _, c in pairs(workspace:WaitForChild("NPCs"):GetChildren()) do
			c:FindFirstChild("Base").Changed:Connect(function()
				local base = c:FindFirstChild("Base")
				if base:IsA("BasePart") then
					if base.Transparency == 0 then
						Rayfield:Notify({
							Title = "Spawner",
							Content = "Hunt has begun!",
							Duration = 2,
							Image = 4483362458,
							Actions = { -- Notification Buttons
								Ignore = {
									Name = "Okay!",
									Callback = function()

									end
								},
							},
						})
					end
				end
			end)
			if not c:FindFirstChild("ESP") then
				local ESP = Instance.new("Highlight")
				ESP.FillColor = Color3.new(0.392157, 0.0392157, 0)
				ESP.Name = "ESP"
				task.wait()
				ESP.Parent = c
				local bg = Instance.new("BillboardGui")
				bg.AlwaysOnTop = true
				bg.Adornee = c
				bg.Size = UDim2.new(4, 0, 1, 0) 
				bg.Parent = c

				local tl = Instance.new("TextLabel")
				tl.TextScaled = true
				tl.Size = UDim2.new(1, 0, 1, 0) 
				tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
				tl.TextStrokeTransparency = 0
				tl.BackgroundTransparency = 1 
				tl.Text = c.Name
				tl.Parent = bg
			end
		end
		workspace:WaitForChild("NPCs").ChildAdded:Connect(function(c)
			c:FindFirstChild("Base").Changed:Connect(function()
				local base = c:FindFirstChild("Base")
				if base:IsA("BasePart") then
					if base.Transparency == 0 then
						Rayfield:Notify({
							Title = "Spawner",
							Content = "Hunt has begun!",
							Duration = 2,
							Image = 4483362458,
							Actions = { -- Notification Buttons
								Ignore = {
									Name = "Okay!",
									Callback = function()

									end
								},
							},
						})
					end
				end
			end)
			if not c:FindFirstChild("ESP") then
				local ESP = Instance.new("Highlight")
				ESP.FillColor = Color3.new(0.392157, 0.0392157, 0)
				ESP.Name = "ESP"
				task.wait()
				ESP.Parent = c
				local bg = Instance.new("BillboardGui")
				bg.AlwaysOnTop = true
				bg.Adornee = c
				bg.Size = UDim2.new(4, 0, 1, 0) 
				bg.Parent = c

				local tl = Instance.new("TextLabel")
				tl.TextScaled = true
				tl.Size = UDim2.new(1, 0, 1, 0) 
				tl.TextColor3 = Color3.fromRGB(255 ,0, 0)
				tl.TextStrokeTransparency = 0
				tl.BackgroundTransparency = 1 
				tl.Text = c.Name
				tl.Parent = bg
			end
		end)
	end,
})

local Section = MainTab:CreateSection("Lighting")

local Button = MainTab:CreateButton({
	Name = "Remove Lighting (FullBright)",
	Callback = function()
		for _, c in pairs(game.Lighting:GetChildren()) do
			if c.Name ~= "GogglesTint" then
				c:Destroy()
			end
		end
		game.Lighting.GlobalShadows = false
		game.Lighting.Brightness = 5
		game.Lighting.ClockTime = 14
		game.Lighting.FogEnd = 999999999999999
	end,
})

local Section = MainTab:CreateSection("Character")

local Slider = MainTab:CreateSlider({
	Name = "Walkspeed",
	Range = {16, 100},
	Increment = 1,
	Suffix = "",
	CurrentValue = 0,
	Flag = "WsSlider",
	Callback = function(Value)
		humanoid.WalkSpeed = Value
	end,
})

local noclipv = Instance.new("BoolValue")
noclipv.Value = false
local Toggle = MainTab:CreateToggle({
	Name = "No-Clip",
	CurrentValue = false,
	Flag = "ClipToggle",
	Callback = function(Value)
		noclipv.Value = Value
	end,
})

local Section = MainTab:CreateSection("Automation")


local Button = MainTab:CreateButton({
	Name = "Auto-collect bone (Recommended run before start)",
	Callback = function()

		for _, c in pairs(game.Workspace:WaitForChild("Map"):GetChildren()) do
			if c.Name == "Bone" and c:IsA("BasePart") then
				local oldcframe = char.PrimaryPart.CFrame
				task.wait()
				char.PrimaryPart.CFrame = c.CFrame

				local la = c.Position + Vector3.new(0, 1.5, 0)
				camera.CameraType = Enum.CameraType.Scriptable
				camera.CFrame = CFrame.new(camera.CFrame.Position, la)

				local proximity = c:FindFirstChild("Bone")
				if proximity and proximity:IsA("ProximityPrompt") then
					repeat
						proximity:InputHoldBegin()
						wait(proximity.HoldDuration)
						proximity:InputHoldEnd()
						task.wait(0.1)
					until not game.Workspace:FindFirstChild("Map"):FindFirstChild("Bone")
				end

				task.wait()
				Rayfield:Notify({
					Title = "Auto-play",
					Content = "Succesfully collected bone!",
					Duration = 2,
					Image = 4483362458,
					Actions = { -- Notification Buttons
						Ignore = {
							Name = "Okay!",
							Callback = function()

							end
						},
					},
				})
				char.PrimaryPart.CFrame = oldcframe
				camera.CameraType = Enum.CameraType.Custom
			end
		end
	end,
})

local Button = MainTab:CreateButton({
	Name = "Auto-highlight ghost room (Run before start)",
	Callback = function()
		workspace:WaitForChild("NPCs").ChildAdded:Connect(function(c)
			local base = c:WaitForChild("Base")
			if base:IsA("BasePart") then
				local part = Instance.new("Part")
				part.Anchored = true
				part.CFrame = base.CFrame
				part.CanCollide = false
				part.Size = Vector3.new(4, 1, 1)

				local bg = Instance.new("BillboardGui")
				bg.AlwaysOnTop = true
				bg.Adornee = part
				bg.Size = UDim2.new(4, 0, 1, 0)
				bg.Parent = part

				local tl = Instance.new("TextLabel")
				tl.TextScaled = true
				tl.Size = UDim2.new(1, 0, 1, 0)
				tl.TextColor3 = Color3.fromRGB(255, 0, 0)
				tl.TextStrokeTransparency = 0
				tl.BackgroundTransparency = 1
				tl.Text = "Ghost Room"
				tl.Parent = bg
				task.wait()
				part.Parent = workspace
			end
		end)
	end,
})

RunService.Stepped:Connect(function()
	if noclipv.Value then
		for _, child in pairs(char:GetDescendants()) do
			if child:IsA("BasePart") and child.CanCollide == true then
				child.CanCollide = false
			end
		end
	else
		for _, child in pairs(char:GetDescendants()) do
			if child:IsA("BasePart") and child.CanCollide == false and (child.Name == "LowerTorso" or child.Name == "UpperTorso" or child.Name == "Torso") then
				child.CanCollide = true
			end
		end
	end
end)


